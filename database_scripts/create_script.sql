-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2023-01-14 18:36:31 EET
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE contracts (
    id_contract NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    id_person   NUMBER NOT NULL,
    id_ps       NUMBER NOT NULL,
    start_date  DATE NOT NULL,
    end_date    DATE
)
LOGGING;

ALTER TABLE contracts ADD CONSTRAINT contracts_id CHECK ( id_contract > 0 );

ALTER TABLE contracts ADD CONSTRAINT contracts_pk PRIMARY KEY ( id_contract );

CREATE TABLE invoices (
    id_invoice   NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    id_contract  NUMBER NOT NULL,
    receipt_date DATE NOT NULL,
    due_date     DATE NOT NULL,
    consumption  NUMBER(7, 2) NOT NULL,
    payment      NUMBER(10, 2)
)
LOGGING;

ALTER TABLE invoices ADD CONSTRAINT invoices_id CHECK ( id_invoice > 0 );

ALTER TABLE invoices ADD CONSTRAINT invoices_consumption_ck CHECK ( consumption > 0 );

ALTER TABLE invoices ADD CONSTRAINT invoices_payment_ck CHECK ( payment > 0 );

ALTER TABLE invoices ADD CONSTRAINT invoices_pk PRIMARY KEY ( id_invoice );

CREATE TABLE persons (
    id_person NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    full_name VARCHAR2(25) NOT NULL,
    phone_no  VARCHAR2(15) NOT NULL,
    address   VARCHAR2(60) NOT NULL,
    email     VARCHAR2(50)
)
LOGGING;

ALTER TABLE persons ADD CONSTRAINT persons_id CHECK ( id_person > 0 );

ALTER TABLE persons
    ADD CONSTRAINT persons_fullname_ck CHECK ( length(full_name) > 1
                                               AND REGEXP_LIKE ( full_name,
                                                                 '^([a-zA-Z]+[- ]?)+$' ) );

ALTER TABLE persons
    ADD CONSTRAINT persons_phoneno_ck CHECK ( REGEXP_LIKE ( phone_no,
                                                            '^(\+?[1-9])?[0-9]{7,14}$' ) );

ALTER TABLE persons
    ADD CONSTRAINT persons_address_ck CHECK ( length(address) > 1 );

ALTER TABLE persons
    ADD CONSTRAINT persons_email_ck CHECK ( REGEXP_LIKE ( email,
                                                          '[a-z0-9._%-]+@[a-z0-9._%-]+\.[a-z]{2,4}' ) );

ALTER TABLE persons ADD CONSTRAINT persons_pk PRIMARY KEY ( id_person );

ALTER TABLE persons ADD CONSTRAINT persons_phone_no_uk UNIQUE ( phone_no );

ALTER TABLE persons ADD CONSTRAINT persons_email_uk UNIQUE ( email );

CREATE TABLE providers (
    id_provider NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    name        VARCHAR2(20) NOT NULL
)
LOGGING;

ALTER TABLE providers ADD CONSTRAINT providers_id CHECK ( id_provider > 0 );

ALTER TABLE providers
    ADD CONSTRAINT providers_name_ck CHECK ( length(name) > 1 );

ALTER TABLE providers ADD CONSTRAINT providers_pk PRIMARY KEY ( id_provider );

ALTER TABLE providers ADD CONSTRAINT providers_name_uk UNIQUE ( name );

CREATE TABLE providers_services (
    id_ps       NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    id_provider NUMBER NOT NULL,
    id_service  NUMBER NOT NULL,
    price       NUMBER(5, 2) NOT NULL
)
LOGGING;

ALTER TABLE providers_services ADD CONSTRAINT providers_services_id CHECK ( id_ps > 0 );

ALTER TABLE providers_services ADD CONSTRAINT provserv_price_ck CHECK ( price > 0 );

ALTER TABLE providers_services ADD CONSTRAINT providers_services_pk PRIMARY KEY ( id_ps );

ALTER TABLE providers_services ADD CONSTRAINT provider_service_uk UNIQUE ( id_provider,
                                                                           id_service );

CREATE TABLE services (
    id_service     NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    name           VARCHAR2(30) NOT NULL,
    id_tariff_type NUMBER(2) NOT NULL
)
LOGGING;

ALTER TABLE services ADD CONSTRAINT services_id CHECK ( id_service > 0 );

ALTER TABLE services
    ADD CONSTRAINT services_name_ck CHECK ( length(name) > 1 );

ALTER TABLE services ADD CONSTRAINT services_pk PRIMARY KEY ( id_service );

ALTER TABLE services ADD CONSTRAINT services_name_uk UNIQUE ( name );

CREATE TABLE services_descriptions (
    id_service  NUMBER NOT NULL,
    description VARCHAR2(200) NOT NULL
)
LOGGING;

ALTER TABLE services_descriptions
    ADD CONSTRAINT servdesc_description_ck CHECK ( length(description) > 1 );

ALTER TABLE services_descriptions ADD CONSTRAINT services_descriptions_pk PRIMARY KEY ( id_service );

CREATE TABLE tariffs_types (
    id_tariff_type NUMBER(2)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    name           VARCHAR2(15) NOT NULL
)
LOGGING;

ALTER TABLE tariffs_types ADD CONSTRAINT tarrifs_types_id CHECK ( id_tariff_type > 0 );

ALTER TABLE tariffs_types
    ADD CONSTRAINT tarifftype_name_ck CHECK ( length(name) > 1 );

ALTER TABLE tariffs_types ADD CONSTRAINT tariffs_types_pk PRIMARY KEY ( id_tariff_type );

ALTER TABLE tariffs_types ADD CONSTRAINT tariffs_types_name_uk UNIQUE ( name );

ALTER TABLE invoices
    ADD CONSTRAINT cts_ivs_fk FOREIGN KEY ( id_contract )
        REFERENCES contracts ( id_contract )
    NOT DEFERRABLE;

ALTER TABLE contracts
    ADD CONSTRAINT pss_cts_fk FOREIGN KEY ( id_person )
        REFERENCES persons ( id_person )
    NOT DEFERRABLE;

ALTER TABLE contracts
    ADD CONSTRAINT pss_cts_fkv2 FOREIGN KEY ( id_ps )
        REFERENCES providers_services ( id_ps )
    NOT DEFERRABLE;

ALTER TABLE providers_services
    ADD CONSTRAINT pvs_pss_fk FOREIGN KEY ( id_provider )
        REFERENCES providers ( id_provider )
    NOT DEFERRABLE;

ALTER TABLE providers_services
    ADD CONSTRAINT svs_pss_fk FOREIGN KEY ( id_service )
        REFERENCES services ( id_service )
    NOT DEFERRABLE;

ALTER TABLE services_descriptions
    ADD CONSTRAINT svs_sds_fk FOREIGN KEY ( id_service )
        REFERENCES services ( id_service )
    NOT DEFERRABLE;

ALTER TABLE services
    ADD CONSTRAINT tts_svs_fk FOREIGN KEY ( id_tariff_type )
        REFERENCES tariffs_types ( id_tariff_type )
    NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER trg_contract_valid 
    BEFORE INSERT OR UPDATE ON Invoices 
    FOR EACH ROW 
DECLARE 
	is_ended date;
BEGIN
	SELECT c.end_date INTO is_ended FROM contracts c where c.id_contract = :new.id_contract;
	IF ( is_ended is not NULL and is_ended < SYSDATE) THEN
		raise_application_error(-20001, 'Contract incheiat la data de: '
                                        || to_char(is_ended, 'DD.MM.YYYY')
                                        || ' .');
	END IF;
END; 
/

CREATE OR REPLACE TRIGGER trg_contracts_enddate 
    BEFORE INSERT OR UPDATE ON Contracts 
    FOR EACH ROW 
BEGIN
    IF ( :new.end_date <= :new.start_date ) THEN
        raise_application_error(-20001, 'Data invalida: '
                                        || to_char(:new.end_date, 'DD.MM.YYYY')
                                        || ' trebuie sa fie mai mare decat data de inceput.');

    END IF;
END; 
/

CREATE OR REPLACE TRIGGER trg_contracts_existent 
    BEFORE INSERT ON Contracts 
    FOR EACH ROW 
DECLARE
	s_date date;
BEGIN
	SELECT nvl(start_date, NULL) INTO s_date FROM contracts WHERE id_person = :new.id_person and id_ps = :new.id_ps and (end_date is null or end_date > sysdate);
	IF (s_date is not null)  THEN
		raise_application_error(-20001, 'Contract existent, inceput la data de: '
                                        || to_char(s_date, 'DD.MM.YYYY')
                                        || ' .');	
	END IF;
	
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		NULL;
END; 
/

CREATE OR REPLACE TRIGGER trg_contracts_startdate 
    BEFORE INSERT OR UPDATE ON Contracts 
    FOR EACH ROW 
BEGIN
	IF( :new.start_date > SYSDATE )
	THEN
		RAISE_APPLICATION_ERROR( -20001,
		'Data invalida: ' || TO_CHAR( :new.start_date, 'DD.MM.YYYY' ) || ' trebuie sa fie mai mica decat data curenta.' );
	END IF;
END; 
/

CREATE OR REPLACE TRIGGER trg_invoices_duedate 
    BEFORE INSERT OR UPDATE ON Invoices 
    FOR EACH ROW 
BEGIN
    IF ( :new.due_date <= :new.receipt_date ) THEN
        raise_application_error(-20001, 'Data invalida: '
                                        || to_char(:new.due_date, 'DD.MM.YYYY')
                                        || ' trebuie sa fie mai mare decat data de inceput.');

    END IF;
END; 
/

CREATE OR REPLACE TRIGGER trg_invoices_receiptdate 
    BEFORE INSERT OR UPDATE ON Invoices 
    FOR EACH ROW 
DECLARE
	start_date_contract date;
BEGIN
	SELECT c.start_date INTO start_date_contract FROM contracts c where c.id_contract = :new.id_contract;
	IF( :new.receipt_date > SYSDATE)
	THEN
		RAISE_APPLICATION_ERROR( -20001,
		'Data invalida: ' || TO_CHAR( :new.receipt_date, 'DD.MM.YYYY' ) || ' trebuie sa fie mai mica decat data curenta.' );
	END IF;
	IF ( :new.receipt_date < start_date_contract ) THEN
		RAISE_APPLICATION_ERROR( -20001,
		'Data invalida: ' || TO_CHAR( :new.receipt_date, 'DD.MM.YYYY' ) || ' trebuie sa fie mai mare decat data de inceput a contractului.' );
	END IF;
END; 
/

CREATE OR REPLACE TRIGGER trg_payment 
    BEFORE INSERT OR UPDATE ON Invoices 
    FOR EACH ROW 
DECLARE 
	price_val number;
BEGIN
	SELECT ps.price INTO price_val FROM contracts c, providers_services ps where c.id_contract = :new.id_contract and c.id_ps = ps.id_ps;
	:new.payment := :new.consumption * price_val;
END; 
/

CREATE OR REPLACE TRIGGER fkntm_contracts BEFORE
    UPDATE OF id_person, id_ps ON contracts
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table Contracts is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_invoices BEFORE
    UPDATE OF id_contract ON invoices
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table Invoices is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_providers_services BEFORE
    UPDATE OF id_provider, id_service ON providers_services
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table Providers_Services is violated');
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             8
-- CREATE INDEX                             0
-- ALTER TABLE                             39
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          10
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
